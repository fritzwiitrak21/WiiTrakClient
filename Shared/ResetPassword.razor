@page "/reset-password"
@layout CustomLayout
@using WiiTrakClient.Cores
@using WiiTrakClient.Enums
@inject ILoginHttpRepository LoginHttpRepository
@using Microsoft.AspNetCore.WebUtilities;
@using Microsoft.Extensions.Primitives;  
@inject NavigationManager NavManager 
@using WiiTrakClient.Shared;
@using WiiTrakClient.Shared.Components;
@inject IDialogService DialogService 


<html>
<head>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="themestyle.css" rel="stylesheet">
<style>

body {
  font-family: "Open Sans", sans-serif;
  height: 100vh;
  margin: 0px;
}

.loginbg{
  background: url("https://images.unsplash.com/photo-1525328437458-0c4d4db7cab4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80") 50% fixed;
  background-size: cover;
  height: 100%;
}

.mud-dialog-container
{
z-index : 99999 !important;
}
.mud-main-content{
padding-left:0px;
}
.wrapper {
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: flex-start;
  width: 100%;
  min-height: 100%;
  padding: 20px;
  background: #071e35db;
  padding-bottom:186px;
}
.login {
padding: 30px 40px 30px 40px;
width: 100%;
max-width: 480px;
background: #fff;
position: relative;
}
.login input {
    display: block;
    padding: 10px 20px 10px 55px;
    margin-bottom: 20px;
    width: 100%;
    border: 1px solid #ddd;
    transition: border-width 0.2s ease;
    color: #000000;
    background: #eee;
    border-radius: 26px !important;
    z-index: 99; 
}
.login input + i.fa {
color: #2c86d2;
font-size: 20px;
position: absolute;
margin-top: 0px;
opacity: 1;
left: 28px;
transition: all 0.1s ease-in;
top: 15px;
}
.input-group{
	position: relative;
}
.login input:focus {
outline: none;
color: #000;
border: 1px solid #2c86d2;
} 
.login .validation-message {
    font-size: 0;
    position: absolute;
    width: calc(100% + 2px);
    height: 48px;
    top: -1px;
    border: 1px solid red;
    border-radius: 26px !important;
    z-index: 9;
    left: 0;
    right: 0; 
}

.login input:focus + i.fa {
  opacity: 1;
  left: 28px;
  transition: all 0.25s ease-out;
}
.login a {
font-size: 14px;
color: #9a9a9a;
text-decoration: none;
font-weight: 600;
}
.login .title {
color: #000;
font-size: 20px;
font-weight: 600;
margin: 0px 0 5px 0;
padding-bottom: 20px;
text-align: center;
padding-top: 20px;
}
.login button {
width: 100%;
height: 100%;
padding: 10px 15px;
background: #2c86d2;
color: #fff;
display: block;
max-height: 60px;
border-radius: 26px;
margin: 30px auto 30px;
border: none;
font-size: 18px;
}
.brandlogo {
width: 100%;
display: flex;
justify-content: center;
margin-top: 4%;
margin-bottom: 3%;
}
.brandlogo img{
  width: 120px;
}
.full-layer{
display: flex;
justify-content: flex-end;
margin-top: 0px;
}
.logintrolleyclip {
background-color: #f1f7fb;
height: 100%;
padding-top: 50px;
text-align: center;
}
.logintrolleyclip img {
  max-width: 55%;
margin-top: 30px;
}

.logintrolleyclip h2 {
  font-size: 30px;
  font-weight: 600;
  color: #2c86d2;
  text-align: center;
}
.logintrolleyclip p {
  font-size: 18px;
  text-align: center;
  color: #585757;
  margin-bottom: 10px;
}

  .login {
  padding: 30px;
  width: 100%;
  max-width: 480px;
  background: #fff;
  position: relative;
  margin: 0px auto;

}

</style>
</head>
<body> 

<div class="loginbg">
    <div class="wrapper">
        <div class="container" style="max-width: 800px;">
            <div class="brandlogo">
                <img alt="Wiitrak logo" src="\images\WiiTrak-logo.png" />
            </div>
            <div class="row" style="border-radius: 10px;overflow: hidden;">
                <div class="col-md-6 hidden-sm p-0">
                    <div class="logintrolleyclip">
                         <p>Nice to see you</p>
                         <h2>Welcome Back!</h2>
                         <p></p>
                         <img alt="Wiitrak logo" src="\images\TrollService.png" />
                    </div>
                </div>
                <div class="col-md-6 col-sm-12 p-0">
                    <form class="login">
                        <EditForm Model="@reset" OnValidSubmit="OnSubmit">
                        <DataAnnotationsValidator />
                            <p class="title">Reset Password</p>
                            <div class="inputoverlay">
                                <label>New Password</label>
                                <div class="input-group">
                                    <input type="password" @bind-value="@reset.NewPassword" placeholder="New Password" autofocus/>
                                    <i class="fa fa-user"></i>
                                    <ValidationMessage For="@(() => reset.NewPassword)" /> 
                                </div>
                            </div>
                            <div class="inputoverlay">
                                <label>Confirm Password</label>
                                    <div class="input-group">
                                        <input type="password" @bind-value="@reset.ConfirmPassword" placeholder="Confirm Password" style="margin-bottom: 6px;" />
                                        <i class="fa fa-lock"></i>
                                        <ValidationMessage For="@(() => reset.ConfirmPassword)" />
                                    </div>
                            </div>

                                            <button type="submit" disabled="@formInvalid">
                                                <i class="spinner"></i>
                                                <span class="state">Reset</span>
                                            </button>

                                            <div class="full-layer text-right">
                                                <a href="/">Login</a>
                                            </div>

                            </EditForm> 
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
</body>
</html>



@code {
    private LoginDto login = new LoginDto();
    private bool formInvalid = false;
    private ForgotPasswordDto forgot = new ForgotPasswordDto();
    private ResetPasswordDto reset = new ResetPasswordDto();
    private bool IsReseted = false;
    private string SuccessMessage { get; set; } = "";

    [Parameter]
    public string Key { get; set; }
    public Guid Key1 { get; set; }

    public Guid UserId { get; set; }
    public string Email { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);

        Email = QueryHelpers.ParseQuery(uri.Query).TryGetValue("Key", out var type) ? type.First() : "";
        var Id = QueryHelpers.ParseQuery(uri.Query).TryGetValue("Key1", out type) ? type.First() : "";
        UserId = new Guid(Id);
    }


    private async void OnSubmit()
    {
        SuccessMessage = "";
        try
        {
            reset.NewPassword = reset.ConfirmPassword = Core.Base64Encrypt(reset.NewPassword);
            await LoginHttpRepository.UpdatePasswordAsync(UserId, reset);
            SuccessMessage = "Password Reset Succesfully.";
            #region Show Message Dialog
            var parameters = new DialogParameters();
            parameters.Add("DisplayMessage",  SuccessMessage);
            parameters.Add("FromWindow", "ResetPassword");
            parameters.Add("IsSuccessNotification",  true);


            DialogOptions options = new DialogOptions() { MaxWidth = MaxWidth.Large };

            var dialog = DialogService.Show<ShowMessageDialog>("Notification", parameters);
            var result = await dialog.Result;

            if (!result.Cancelled)
            {
                NavManager.NavigateTo("/");
            }
            #endregion
            
        }
        catch (Exception ex)
        {

        }
    }

}
