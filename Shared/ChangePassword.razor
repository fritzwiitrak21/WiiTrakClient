@page "/change-password"
@using WiiTrakClient.HttpRepository
@using WiiTrakClient.Shared.Components
@inject ILoginHttpRepository LoginHttpRepository
@inject IDialogService DialogService

<h3></h3>
<MudCard Outlined="true" Class="pa-5">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h4">Change Password</MudText>
        </CardHeaderContent>
           
    </MudCardHeader>
    <MudCardContent> 
        <EditForm Model="@changePassword" OnValidSubmit="OnSubmit">
                        <DataAnnotationsValidator />
            <MudTextField InputType="InputType.Password" @bind-Value="@changePassword.Password" Label="Current Password" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="@(() => changePassword.Password)" /> 
            <MudTextField InputType="InputType.Password" @bind-Value="@changePassword.NewPassword" Label="New Password" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="@(() => changePassword.NewPassword)" /> 
            <MudTextField InputType="InputType.Password" @bind-Value="@changePassword.ConfirmPassword" Label="Confirm New Password" Variant="Variant.Outlined"></MudTextField>
                <ValidationMessage For="@(() => changePassword.ConfirmPassword)" /> 
                    <br />
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick=OnSubmit>Update Password</MudButton> 
        </EditForm>
    </MudCardContent> 
</MudCard>

@code {
    private ChangePasswordDto changePassword = new ChangePasswordDto();
    //private string SuccessMessage { get; set; } = "";
    //public Guid UserId { get; set; }

    private async void OnSubmit()
    {
        //SuccessMessage = "";
        //try
        //{
        //    await LoginHttpRepository.ChangePasswordAsync(UserId, changePassword);
        //    SuccessMessage = "Password Changed Succesfully.";
        //    #region Show Message Dialog
        //    var parameters = new DialogParameters();
        //    parameters.Add("DisplayMessage", SuccessMessage);
        //    parameters.Add("IsSuccessNotification", true);


        //    DialogOptions options = new DialogOptions() { MaxWidth = MaxWidth.Large };

        //    var dialog = DialogService.Show<ShowMessageDialog>("Notification", parameters);
        //    var result = await dialog.Result;
        //    #endregion
        //}
        //catch(Exception ex)
        //{
            
        //}

    }

}
