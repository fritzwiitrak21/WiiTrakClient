@namespace WiiTrakClient.Shared.TechnicianCreation.Components
@using WiiTrakClient.Cores
<style>
    .validation-message {
        font-size: 0;
        display: none;
        font-display: block;
        color: red;
    }

    .mud-input-helper-text.mud-input-error {
        font-size: 0;
    }

    .mud-input-helper-text {
        color: var(--mud-palette-text-secondary);
        margin: 0;
        font-size: 0;
    }
</style>
<MudDialog>
    <DialogContent>
        <div style="width: 400px;height:450px;overflow: auto;">
            <MudForm Model="@NewTechnician" @ref=form @bind-IsValid="@success" @bind-Errors="@errors">
                @if (CurrentUser.UserRoleId == 1)
                {
                    <MudItem Class="my-6">
                        <MudSelect T="CompanyDto" Label="Select Company" Required=true RequiredError=" " ValueChanged="(value) => HandleCompany(value)"
                               AnchorOrigin="Origin.BottomCenter">
                            @foreach (var company in Company)
                            {
                                <MudSelectItem T="CompanyDto" Value="@company">@company.Name</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                }
                <MudTextField class="my-6" @bind-Value="NewTechnician.FirstName" Label="First Name" Required=true RequiredError="" For="@(() => @NewTechnician.FirstName)" Variant="Variant.Text"></MudTextField>
                <MudTextField class="my-6" @bind-Value="NewTechnician.LastName" Label="Last Name" Required=true RequiredError="" For="@(() => @NewTechnician.LastName)" Variant="Variant.Text"></MudTextField>
                <MudTextField class="my-6" @bind-Value="NewTechnician.Email" Label="Email" Required=true RequiredError="" For="@(() => @NewTechnician.Email)" Variant="Variant.Text"></MudTextField>
                <MudTextField class="my-6" @bind-Value="NewTechnician.Phone" Label="Phone" Required=true RequiredError="" For="@(() => @NewTechnician.Phone)" Variant="Variant.Text"></MudTextField>
                <div class="d-flex">
                    <MudButton OnClick="Cancel">Cancel</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit" Class="ml-auto">Save</MudButton>
                </div>
            </MudForm>
        </div>
    </DialogContent>
</MudDialog>

@code {
    [Parameter]
    public TechnicianDto? NewTechnician { get; set; }
    public List<CompanyDto> Company { get; set; } = new();
    [Inject]
    public ICompanyHttpRepository CompanyRepository { get; set; }
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    bool success;
    string[] errors = { };
    MudForm form;
    protected override void OnParametersSet()
    {
        if (CurrentUser.UserRoleId == 1)
        {
            NewTechnician.SystemOwnerId = CurrentUser.UserId;
        }
        else if (CurrentUser.UserRoleId == 3)
        {
            NewTechnician.CompanyId = CurrentUser.UserId;
        }
    }
    protected override async Task OnInitializedAsync()
    {
        Company = await CompanyRepository.GetCompaniesBySystemOwnerIdAsync(CurrentUser.UserId);
    }
    public async Task HandleCompany(CompanyDto company)
    {
        NewTechnician.CompanyId = company.Id;
    }
    void Submit()
    {
        form.Validate();
        if (success && errors.Length == 0)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
    }
    void Cancel() => MudDialog.Cancel();
}