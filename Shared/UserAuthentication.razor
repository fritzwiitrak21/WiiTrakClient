@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager
@using WiiTrakClient.Cores;

@code {

    private IJSObjectReference JsModule, JsModuleStore, JsModuleCart;
    protected override async Task OnInitializedAsync()
    {
        JsModule = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/localstorage.js");
        var Id = await JsModule.InvokeAsync<string>("getUserId");
        if (Id == "" || Id == null)
        {
            NavManager.NavigateTo("/logout");
        }
        else
        {
            CurrentUser.UserId = new Guid(Id);
            var name = CurrentUser.UserName = await JsModule.InvokeAsync<string>("getUserName");
            var role = CurrentUser.UserRole = await JsModule.InvokeAsync<string>("getUserRole");
            var roleid = await JsModule.InvokeAsync<string>("getUserRoleId");
            CurrentUser.UserRoleId = Convert.ToInt32(roleid);
        }
        if (CurrentUser.UserRoleId == 5)
        {
            JsModuleStore = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/StoreGoogleMaps.js");
            await JsModuleStore.InvokeVoidAsync("StopWatch");
            await JsModuleStore.InvokeVoidAsync("StopTimer");

            JsModuleCart = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/CartGoogleMaps.js");
            await JsModuleCart.InvokeVoidAsync("StopWatch");
            await JsModuleCart.InvokeVoidAsync("StopTimer");
        }
        StateHasChanged();
    }
}
