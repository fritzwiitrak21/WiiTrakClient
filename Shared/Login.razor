@page "/"
@layout CustomLayout
@using WiiTrakClient.Cores
@using WiiTrakClient.Enums
@using WiiTrakClient.Shared;
@using WiiTrakClient.Shared.Components;
@inject NavigationManager NavManager
@inject ILoginHttpRepository LoginHttpRepository
@inject IDialogService DialogService
@inject IJSRuntime JSRuntime

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>

        body {
            font-family: "Open Sans", sans-serif;
            height: 100vh;
            margin: 0px;
        }

        .loginbg {
            background: url("https://images.unsplash.com/photo-1525328437458-0c4d4db7cab4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80") 50% fixed;
            background-size: cover;
            height: 100%;
        }
       
        .mud-dialog-container {
            z-index: 99999 !important;
        }

        .mud-main-content {
            padding-left: 0px;
        }

        .logintrolleyclip {
            padding-bottom: 59px !important;
        }

        .wrapper {
            display: flex;
            align-items: center;
            flex-direction: column;
            justify-content: flex-start;
            width: 100%;
            min-height: 100%;
            padding: 20px;
            background: #071e35db;
            padding-bottom: 186px;
        }



        .login {
            padding: 30px 40px 30px 40px;
            width: 100%;
            max-width: 480px;
            background: #fff;
            position: relative;
        }

            .login input {
                display: block;
                padding: 10px 20px 10px 55px;
                margin-bottom: 20px;
                width: 100%;
                border: 1px solid #ddd;
                transition: border-width 0.2s ease;
                color: #000000;
                background: #eee;
                border-radius: 26px !important;
                z-index: 99;
            }

                .login input + i.fa {
                    color: #2c86d2;
                    font-size: 20px;
                    position: absolute;
                    margin-top: 0px;
                    opacity: 1;
                    left: 28px;
                    transition: all 0.1s ease-in;
                    top: 15px;
                }

        .input-group {
            position: relative;
        }

        .login input:focus {
            outline: none;
            color: #000;
            border: 1px solid #2c86d2;
        }

        .login .validation-message {
            font-size: 0;
            position: absolute;
            width: calc(100% + 2px);
            height: 48px;
            top: -1px;
            border: 1px solid red;
            border-radius: 26px !important;
            z-index: 9;
            left: 0;
            right: 0;
        }

        .login input:focus + i.fa {
            opacity: 1;
            left: 28px;
            transition: all 0.25s ease-out;
        }

        .login a {
            font-size: 14px;
            color: #9a9a9a;
            text-decoration: none;
            font-weight: 600;
        }

        .login .title {
            color: #000;
            font-size: 20px;
            font-weight: 600;
            margin: 0px 0 5px 0;
            padding-bottom: 20px;
            text-align: center;
            padding-top: 20px;
        }

        .login button {
            width: 100%;
            height: 100%;
            padding: 10px 15px;
            background: #2c86d2;
            color: #fff;
            display: block;
            max-height: 60px;
            border-radius: 26px;
            margin: 30px auto 30px;
            border: none;
            font-size: 18px;
        }

        .brandlogo {
            width: 100%;
            display: flex;
            justify-content: center;
            margin-top: 4%;
            margin-bottom: 3%;
        }

            .brandlogo img {
                width: 120px;
            }

        .full-layer {
            display: flex;
            justify-content: flex-end;
            margin-top: 0px;
        }

        .logintrolleyclip {
            background-color: #f1f7fb;
            height: 100%;
            padding-top: 50px;
            text-align: center;
        }

            .logintrolleyclip img {
                max-width: 55%;
                margin-top: 30px;
            }

            .logintrolleyclip h2 {
                font-size: 30px;
                font-weight: 600;
                color: #2c86d2;
                text-align: center;
            }

            .logintrolleyclip p {
                font-size: 18px;
                text-align: center;
                color: #585757;
                margin-bottom: 10px;
            }

        .login {
            padding: 30px;
            width: 100%;
            max-width: 480px;
            background: #fff;
            position: relative;
            margin: 0px auto;
        }

    </style>
</head>
<body>

    <div class="loginbg">
        <div class="wrapper">
            <div class="container" style="max-width: 800px;">
                <div class="brandlogo">
                    <img alt="Wiitrak logo" src="\images\WiiTrak-logo.png" />
                </div>
                <div class="row" style="border-radius: 10px;overflow: hidden;">
                    <div class="col-md-6 hidden-sm p-0">
                        <div class="logintrolleyclip">
                            <p>Nice to see you</p>
                            <h2>Welcome Back!</h2>
                            <p></p>
                            <img alt="Wiitrak logo" src="\images\TrollService.png" />
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-12 p-0">
                        <form class="login">
                            <EditForm Model="@login" OnValidSubmit="OnSubmit">
                                <DataAnnotationsValidator />
                                <p class="title">Members Login</p>
                                <div class="inputoverlay">
                                    <label>User Name</label>
                                    <div class="input-group">
                                        <input type="text" @bind-value="@login.Username" placeholder="Username" autofocus />
                                        <i class="fa fa-user"></i>
                                        <ValidationMessage For="@(() => login.Username)" />
                                    </div>
                                </div>
                                <div class="inputoverlay">
                                    <label>Password</label>
                                    <div class="input-group">
                                        <input type="password" @bind-value="@login.Password" placeholder="Password" style="margin-bottom: 6px;" />
                                        <i class="fa fa-lock"></i>
                                        <ValidationMessage For="@(() => login.Password)" />
                                    </div>
                                </div>
                                <div class="full-layer text-right">
                                    <a href="/forgot-password">Forgot your password?</a>
                                </div>
                                <button type="submit" disabled="@formInvalid">
                                    <i class="spinner"></i>
                                    <span class="state">Log in</span>
                                </button>
                            </EditForm>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>



@code {
    private LoginDto login = new LoginDto();
    private bool formInvalid = false;
    private string ErrorMessage { get; set; } = "";
    private IJSObjectReference _jsModule;

    protected override async Task OnInitializedAsync()
    {
         _jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/localstorage.js");
    }


    private async void OnSubmit()
    {
        try
        {
            var loginWithBse64 = new LoginDto();
            loginWithBse64.Username = Core.Base64Encrypt(login.Username);
            loginWithBse64.Password = Core.Base64Encrypt(login.Password);

            var UserDetails = await LoginHttpRepository.GetUsersDetailsByLoginAsync(loginWithBse64);

            if (UserDetails != null)
            {

                CurrentUser.UserId = UserDetails.Id;
                CurrentUser.UserRoleId = UserDetails.AssignedRole;
                CurrentUser.UserRole = Enum.GetName(typeof(Role), CurrentUser.UserRoleId);
                CurrentUser.UserName = Core.ToPascalCase(string.Concat(UserDetails.FirstName, " ", UserDetails.LastName));
                CurrentUser.IsFirstLogin = Convert.ToBoolean(UserDetails.IsFirstLogin);
                CurrentUser.PasswordLastUpdatedAt = UserDetails.PasswordLastUpdatedAt;

               
                await _jsModule.InvokeVoidAsync("saveUserId",CurrentUser.UserId);
                await _jsModule.InvokeVoidAsync("saveUserName",CurrentUser.UserName);
                await _jsModule.InvokeVoidAsync("saveUserRole",CurrentUser.UserRole);
                await _jsModule.InvokeVoidAsync("saveUserRoleId",CurrentUser.UserRoleId);


                if (CurrentUser.IsFirstLogin)
                {
                    // TODO : Navigate to password update page
                    //Key - Email , Key1 - UserId
                    NavManager.NavigateTo("/reset-password?Key=" + Core.Base64Encrypt(UserDetails.Email) + "&Key1=" + CurrentUser.UserId);
                }
                else
                {
                    //<MudAlert Severity="Severity.Success" Variant="Variant.Filled">Successfully LoggedIn</MudAlert>
                    NavManager.NavigateTo("/index");
                }
            }
            else
            {
                ErrorMessage = "Invalid or Inactive Credentials";
                // TODO : Invalid or Inactive Credentials

                #region Show Message Dialog
                var parameters = new DialogParameters();
                parameters.Add("DisplayMessage", ErrorMessage);
                parameters.Add("FromWindow", "Login");
                parameters.Add("IsSuccessNotification", false);

                DialogOptions options = new DialogOptions() { MaxWidth = MaxWidth.Large };

                var dialog = DialogService.Show<ShowMessageDialog>("Notification", parameters);
                var result = await dialog.Result;

                #endregion

            }

        }
        catch (Exception ex)
        {

        }
    }

}
