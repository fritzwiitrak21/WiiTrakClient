@page "/pic-upload"

@namespace WiiTrakClient.Shared.Components
@using System.Net.Http.Headers
@using System.Drawing
@using System.Drawing.Imaging

<InputFile id="fileInput" OnChange="UploadFile" capture hidden accept=".jpg, .jpeg, .png" style="@styleCss" />

<MudFab HtmlTag="label"
        Color="MudBlazor.Color.Secondary"
        Icon="@Icons.Filled.PhotoCamera"
        Label="Take Picture"
        for="fileInput" Required=true RequiredError=" " />

@code {
    [Parameter]
    public EventCallback<string> OnPicUploadComplete { get; set; }

    [Parameter]
    public EventCallback OnPicUploadStart { get; set; }
    [Parameter]
    public EventCallback<IBrowserFile> IBrowserContent { get; set; }

    [Parameter]
    public string styleCss { get; set; } = "";

    IBrowserFile? ImageFile = null;

    private async Task UploadFile(InputFileChangeEventArgs e)
    {
        await OnPicUploadStart.InvokeAsync();
        ImageFile = e.File;
        if (ImageFile != null)
        {
            ImageFile = e.File;
            var resizedFile = await ImageFile.RequestImageFileAsync("image/png", 300, 300);
            var buffers = new byte[resizedFile.Size];
            await resizedFile.OpenReadStream().ReadAsync(buffers);
            string imageType = resizedFile.ContentType;
            var ImgUrl = $"data:{imageType};base64,{Convert.ToBase64String(buffers)}";
            await OnPicUploadComplete.InvokeAsync(ImgUrl);
            await IBrowserContent.InvokeAsync(resizedFile);
        }
        else
        {
            await OnPicUploadComplete.InvokeAsync("");
            await IBrowserContent.InvokeAsync(null);
        }
    }
}
