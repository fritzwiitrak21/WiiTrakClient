@page "/company-driver-store"
@using WiiTrakClient.Cores
@using WiiTrakClient.Features.Companies.Components

<UserAuthentication/>
<div class="my-8">
<MudGrid class="my-8">
    <MudItem xs="12" sm="6" md="4">
        <MudSelect T="DriverDto" Label="Select Driver" ValueChanged="(value) => HandleDriverSelected(value)"
            AnchorOrigin="Origin.BottomCenter">
            @foreach (var driver in Drivers)
            {
                <MudSelectItem T="DriverDto" Value="@driver">@driver.FirstName @driver.LastName</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
   @*  <MudItem xs="6" md="2">
            <MudSelect T="string" Label="Stores" Dense="true" ValueChanged="(value) => GetStoreDetails(value)">
                <MudSelectItem T="string" Value="@("All")" />
                <MudSelectItem T="string" Value="@("Assigned")" />
                <MudSelectItem T="string" Value="@("Unassigned")" />
            </MudSelect>
        </MudItem>*@
</MudGrid>
</div>
@if (driverstore.Count>0)
{
    <DriverStoreList driverstore ="driverstore"/>
}
else
{
    <label>No Stores found</label>
}

@code {

    public List<DriverDto> Drivers { get; set; }=new();

    public List<DriverStoreDetailsDto> driverstore { get; set; } = new();
    public List<DriverStoreDetailsDto> alldriverstore { get; set; } = new();
    public DriverDto _selectedDriver = new();

    [Inject]
    public IDriverStoresHttpRepository DriverStoreRepository { get; set; }

    [Inject]
    public IDriverHttpRepository DriverRepository { get; set; }
   
    protected override async Task OnInitializedAsync()
    {
        Drivers = await DriverRepository.GetDriversByCompanyIdAsync(CurrentUser.UserId);
    } 
    private async Task HandleDriverSelected(DriverDto Driver)
    {
        alldriverstore = await DriverStoreRepository.GetDriverStoresByCompanyIdAsync(CurrentUser.UserId, Driver.Id);
        driverstore = alldriverstore;
        Core.SelectedDriverId = Driver.Id;
    }
    //  public void GetStoreDetails(string value)
    //{
    //    if (value == "All")
    //    {
    //        driverstore = alldriverstore;
    //    }
    //    else if(value=="Assigned")
    //    {
    //        driverstore = alldriverstore.Where(x => x.DriverStoresIsActive == true).ToList();
    //    }
    //    else if(value=="Unassigned")
    //    {
    //       driverstore = alldriverstore.Where(x => x.DriverStoresIsActive == false).ToList();
    //    }

    //}
}
