@using WiiTrakClient.Features.Technicians.Components
@namespace WiiTrakClient.Features.Technicians.Components

<MudTable Items="@Carts" Class="Pagingstyle" Hover="true" SortLabel="Sort By">
    <HeaderContent>
        
        <MudTh><MudTableSortLabel SortBy="new Func<CartDto, object>(x=>x.Store.StoreName)">Store Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CartDto, object>(x=>x.ManufacturerName)">Cart Detail</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CartDto, object>(x=>x.Device.DeviceName)">Device Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CartDto, object>(x=>x.Condition)">Condition</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CartDto, object>(x=>x.Status)">Status</MudTableSortLabel></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Store Name">
            @context.Store.StoreName - @context.Store.StoreNumber
        </MudTd>
        <MudTd DataLabel="Cart Detail">
            @context.ManufacturerName - @context.CartNumber
        </MudTd>
         @if (context.Device != null)
        {
            <MudTd DataLabel="Device Name">
                @context.Device.DeviceModel - @context.Device.DeviceName
            </MudTd>;
        }
        else
        {
            <MudTd DataLabel="Device Name"> </MudTd>
        }

        <MudTd DataLabel="Condition">
            @switch (context.Condition)
            {
                case CartCondition.Good:
                    <span style="background:#90ee90;padding:2px;">Good</span>
                    break;
                case CartCondition.Damage:
                    <span style="background:#ff474c;padding:2px;">Damage</span>
                    break;
                case CartCondition.DamageBeyondRepair:
                    <span style="background:#ff474c;padding:2px;">Trash</span>
                    break;
            }
        </MudTd>
        <MudTd DataLabel="Status">
            @switch (context.Status)
            {
                case CartStatus.InsideGeofence:
                    <span style="background:#90ee90;padding:2px;">Delivered</span>
                    break;
                case CartStatus.OutsideGeofence:
                    <span style="background:#ffffe0;padding:2px;">Needs Pick Up</span>
                    break;
                case CartStatus.PickedUp:
                    <span style="background:#90ee90;padding:2px;">On Truck</span>
                    break;
                case CartStatus.Lost:
                    <span style="background:#ff474c;padding:2px;">Lost</span>
                    break;
            }
        </MudTd>
        <MudTd>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary"
                       OnClick="((e) => OpenMapDevice(context))">
                Map Device
            </MudButton>
            @if (context.DeviceId != null && context.DeviceId != Guid.Empty)
            {
                <MudButton Variant="Variant.Filled" Style="background-color:blueviolet;color:white;"
                       OnClick="((e) => GetConfirmation(context))">
                    Remove Device
                </MudButton>
            }
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{10, 50, 100}" />
    </PagerContent>
</MudTable>