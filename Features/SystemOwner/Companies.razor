@page "/companies"

@using WiiTrakClient.Features.SystemOwner.Components
@using WiiTrakClient.Cores

@inject IJSRuntime JsRuntime
@inject ICompanyHttpRepository CompanyRepository
@inject IDialogService DialogService



<h1>WiiTrak Companies</h1>

<div class="d-flex justify-end">
    <MudButton Variant="Variant.Filled" 
        StartIcon="@Icons.Material.Filled.Add" 
        IconColor="Color.Secondary" 
        Size="Size.Large"
        OnClick="OpenDialog">Add</MudButton>
</div>

<div class="my-8">
    <CompanyList Companies="@_companies" />
</div>



@code {
    List<CompanyDto> _companies = new ();
    
    CompanyCreationDto _newCompany = new();

    protected override async Task OnInitializedAsync()
    {
        _companies = await CompanyRepository.GetCompaniesBySystemOwnerIdAsync(CurrentUser.UserId);     
    }  

    private async Task OpenDialog() 
    {
        var parameters = new DialogParameters(); 
        parameters.Add("NewCompany", _newCompany);

         DialogOptions options = new DialogOptions() { MaxWidth = MaxWidth.Large }; 

         var dialog  = DialogService.Show<AddCompanyDialog>("Add Company", parameters);
        var result = await dialog.Result; 

        if (!result.Cancelled) 
        {
            // add new customer to backend
            var customerCreation = new CompanyCreationDto {
                Name = _newCompany.Name,
                StreetAddress1 = _newCompany.StreetAddress1,
                StreetAddress2 = _newCompany.StreetAddress2,
                City = _newCompany.City,
                State = _newCompany.State,
                PostalCode = _newCompany.PostalCode,
                ProfilePicUrl = _newCompany.ProfilePicUrl,
                Email = _newCompany.Email,
                PhonePrimary = _newCompany.PhonePrimary,
                PhoneSecondary = _newCompany.PhoneSecondary,
                SystemOwnerId = CurrentUser.UserId,
            };
           await CompanyRepository.CreateCompanyAsync(customerCreation);
           _companies = await CompanyRepository.GetCompaniesBySystemOwnerIdAsync(CurrentUser.UserId);  
        } 
    } 
}