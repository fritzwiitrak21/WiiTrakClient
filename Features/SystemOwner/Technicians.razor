@page "/technicians"

@using WiiTrakClient.Cores
@using WiiTrakClient.Features.SystemOwner.Components

@inject IJSRuntime JsRuntime
@inject ITechnicianHttpRepository TechnicianRepository
@inject IDialogService DialogService

<UserAuthentication/>
<h1>Technicians</h1>

<div class="d-flex justify-end">
    <MudButton Variant="Variant.Filled" 
        StartIcon="@Icons.Material.Filled.Add" 
        IconColor="Color.Secondary" 
        Size="Size.Large"
        OnClick="OpenDialog">Add</MudButton>
</div>

<div class="my-8">
    @if (TechniciansList == null)
    {
        <MudText Class="my-4" Typo="Typo.h6">No data found.</MudText>
    }
    else if (Technician.Count > 0)
    {
        <TechnicianList Technicians="@Technician" />
    }
    else
    {
        <MudProgressLinear Color="Color.Info" Indeterminate="true" Class="my-7" />
    }
</div>

@code {
    private IJSObjectReference JsModule;
    List<TechnicianDto> Technician = new ();
    List<TechnicianDto> TechniciansList = new();
    TechnicianDto AddTechnician = new();

    protected override async Task OnInitializedAsync()
    {
        if (CurrentUser.UserId == Guid.Empty)
        {
            JsModule = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/localstorage.js");
            var Id = await JsModule.InvokeAsync<string>("getUserId");
            CurrentUser.UserId = new Guid(Id);
        }

        TechniciansList = await TechnicianRepository.GetTechniciansBySystemOwnerIdAsync(CurrentUser.UserId);
        if (TechniciansList is not null)
        {
            Technician = TechniciansList;
        }
        StateHasChanged();
    }
    private async Task OpenDialog() 
    {
        var parameters = new DialogParameters();
        AddTechnician = new TechnicianDto();
        parameters.Add("NewTechnician", AddTechnician);

        DialogOptions options = new DialogOptions() { MaxWidth = MaxWidth.Large };

        var dialog = DialogService.Show<AddTechnicianDialog>("Add Technician", parameters);
        var result = await dialog.Result; 

        if (!result.Cancelled) 
        {
            // add new technician to backend
            var TechnicianCreation = new TechnicianDto {
                FirstName = AddTechnician.FirstName,
                LastName = AddTechnician.LastName,
                Email = AddTechnician.Email,
                Phone = AddTechnician.Phone,
                ProfilePic = AddTechnician.ProfilePic,
                SystemOwnerId=CurrentUser.UserId,
                CompanyId=AddTechnician.CompanyId,
            };
           await TechnicianRepository.CreateTechnicianAsync(TechnicianCreation,CurrentUser.UserRoleId);
        }  
        Technician = await TechnicianRepository.GetTechniciansBySystemOwnerIdAsync(CurrentUser.UserId);    
    } 
}