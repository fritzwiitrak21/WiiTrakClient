@page "/corporates"

@using WiiTrakClient.Features.SystemOwner.Components
@using WiiTrakClient.Cores

@inject IJSRuntime JsRuntime
@inject ICorporateHttpRepository CorporateRepository
@inject IDialogService DialogService

<UserAuthentication/>

<h1>WiiTrak Corporates</h1> 

<div class="d-flex justify-end">
    <MudButton Variant="Variant.Filled"
               StartIcon="@Icons.Material.Filled.Add"
               IconColor="Color.Secondary"
               Size="Size.Large"
               OnClick="OpenDialog">Add</MudButton>
</div>

<div class="my-8">

    @if (CorporatesList == null)
    {
        <MudText Class="my-4" Typo="Typo.h6">No data found.</MudText>
    }
    else if (corporate.Count > 0)
    {
        <CorporateList corporates="@corporate" />
    }
    else
    {
        <MudProgressLinear Color="Color.Info" Indeterminate="true" Class="my-7" />
    }

</div>

@code {

    List<CorporateDto> corporate = new();
    List<CorporateDto> CorporatesList = new();

    CorporateCreationDto AddCorporate = new();
    bool LoaderVisibility = false;
    private IJSObjectReference JsModule;

    protected override async Task OnInitializedAsync()
    {
        if (CurrentUser.UserId == Guid.Empty)
        {
            JsModule = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/localstorage.js");
            var Id = await JsModule.InvokeAsync<string>("getUserId");
            CurrentUser.UserId = new Guid(Id);
        }

        CorporatesList = await CorporateRepository.GetAllCorporatesAsync();

        if (CorporatesList is not null)
        {
            corporate = CorporatesList;
        }
        StateHasChanged();
    }

    private async Task OpenDialog()
    {
        try
        {
            var parameters = new DialogParameters();
            AddCorporate = new CorporateCreationDto();
            parameters.Add("NewCorporate", AddCorporate);

            DialogOptions options = new DialogOptions() { MaxWidth = MaxWidth.Large };

            var dialog = DialogService.Show<AddCorporateDialog>("Add Corporate", parameters);
            var result = await dialog.Result;

            if (!result.Cancelled)
            {
                // add new customer to backend
                var customerCreation = new CorporateCreationDto
                    {
                                Name = AddCorporate.Name,
                                StreetAddress1 = AddCorporate.StreetAddress1,
                                StreetAddress2 = AddCorporate.StreetAddress2,
                                City = AddCorporate.City,
                                State = AddCorporate.State,
                                PostalCode = AddCorporate.PostalCode,
                                ProfilePicUrl = AddCorporate.ProfilePicUrl,
                                Email = AddCorporate.Email,
                                PhonePrimary = AddCorporate.PhonePrimary,
                                PhoneSecondary = AddCorporate.PhoneSecondary,
                                SystemOwnerId = CurrentUser.UserId  
  
                            };
                await CorporateRepository.CreateCorporateAsync(CurrentUser.UserId,CurrentUser.UserRoleId, customerCreation);
            }
            corporate = await CorporateRepository.GetAllCorporatesAsync();  
        }
        catch  (Exception ex)
        {

        }
    }

}
