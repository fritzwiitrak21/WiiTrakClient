@namespace WiiTrakClient.Features.SystemOwner.Components
@using System.ComponentModel.DataAnnotations
@using WiiTrakClient.Cores

<style>
    .validation-message {
    font-size:0;
    display:none;
    font-display:block;
    
    color: red;
}
.mud-input-helper-text.mud-input-error {
    font-size: 0;
}
.mud-input-helper-text {
    color: var(--mud-palette-text-secondary);
    margin: 0;
    font-size: 0;
    
}      
</style>

<MudDialog>
    <DialogContent>              
        <div style="width: 400px;height:450px;overflow: auto;">
            <MudForm Model="@Driver" @ref=form @bind-IsValid="@success" @bind-Errors="@errors">  
                @*<MudItem>
        <MudSelect T="CompanyDto" Label="Select Company" 
            AnchorOrigin="Origin.BottomCenter">
            @foreach (var company in Companys)
            {
                <MudSelectItem T="CompanyDto" Value="@company">@company.Name</MudSelectItem>
            }
        </MudSelect>
    </MudItem>*@
                <MudTextField class="my-6" @bind-Value="Driver.FirstName" Label="First Name" Required="true" RequiredError="" For="@(() => @Driver.FirstName)" Variant="Variant.Text"></MudTextField>  
                <MudTextField class="my-6" @bind-Value="Driver.LastName" Label="Last Name" Required="true" RequiredError="" For="@(() => @Driver.LastName)" Variant="Variant.Text"></MudTextField>  
                <MudTextField class="my-6" @bind-Value="Driver.Email" Label="Email" Required="true" RequiredError="" For="@(() => @Driver.Email)" Variant="Variant.Text"></MudTextField>  
                <MudTextField class="my-6" @bind-Value="Driver.Phone" Label="Phone" Required="true" RequiredError="" For="@(() => @Driver.Phone)" Variant="Variant.Text"></MudTextField>
                <MudTextField class="my-6" @bind-Value="Driver.StreetAddress1" Label="Street Address 1" Required="true" RequiredError="" For="@(() => @Driver.StreetAddress1)" Variant="Variant.Text"></MudTextField>
                <MudTextField class="my-6" @bind-Value="Driver.StreetAddress2" Label="Street Address 2" Required="true" RequiredError="" For="@(() => @Driver.StreetAddress2)" Variant="Variant.Text"></MudTextField>
                <MudTextField class="my-6" @bind-Value="Driver.City" Label=City Required="true" RequiredError="" For="@(() => @Driver.City)" Variant="Variant.Text"></MudTextField>
                <MudTextField class="my-6" @bind-Value="Driver.State" Required="true" RequiredError=""  Label="State" For="@(() => @Driver.State)" Variant="Variant.Text"></MudTextField>
                @*<MudTextField class="my-6" @bind-Value="Driver.CountryCode"  Label="Country Code" Required="true" RequiredError="" Variant="Variant.Text"></MudTextField>*@
                <MudTextField class="my-6" @bind-Value="Driver.PostalCode" Label="Zip Code" Required="true" RequiredError="" For="@(() => @Driver.PostalCode)" Variant="Variant.Text"></MudTextField>
                <MudCheckBox class="my-6"  @bind-Checked="@Driver.IsSuspended" Label="Suspend" Color="Color.Primary"></MudCheckBox>  
                <MudCheckBox class="my-6" @bind-Checked="@Driver.IsTerminated" Label="Terminate" Color="Color.Primary"></MudCheckBox> 
                <div class="d-flex">
                    <MudButton OnClick="Cancel">Cancel</MudButton>
@*                  <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>form.Reset())" Class="mx-2">Reset</MudButton>
*@                  <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" OnClick="Submit" Class="ml-auto">Update</MudButton>
                </div>
            </MudForm>
        </div>
    </DialogContent>
</MudDialog>


@code {
    [Parameter]
    public DriverDto? Driver {get; set;}
    //public List<CompanyDto>? Companys { get; set; } = new();

    //public CompanyDto _selectedCompany = new();
    //[Inject]
    //public ICompanyHttpRepository CompanyRepository { get; set; }
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    bool success;
    string[] errors = { };
    MudForm form;
    //protected override async Task OnInitializedAsync()
    //{ 
    //    Companys = await CompanyRepository.GetCompaniesBySystemOwnerIdAsync(CurrentUser.UserId);

    //    if (Companys.Count > 0)
    //    {
    //        _selectedCompany = Companys[0];
    //        Driver.CompanyId = _selectedCompany.Id;
    //    }
        
        
    //} 
    protected override void OnParametersSet() {
        //if (Companys != null && Companys.Count() >= 1) 
        //{
        //    _selectedCompany = Companys.Where(x => x.Id == Driver.CompanyId).FirstOrDefault();
        //}
            
    }

    void Submit() 
    { 
        MudDialog.Close(DialogResult.Ok(true)); 
    }
    void Cancel() => MudDialog.Cancel();
}