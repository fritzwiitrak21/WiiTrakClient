@namespace WiiTrakClient.Features.SystemOwner.Components
<style>
    .validation-message {
    font-size:0;
    display:none;
    font-display:block;
    color: red;
}
.mud-input-helper-text.mud-input-error {
    font-size: 0;
}
.mud-input-helper-text {
    color: var(--mud-palette-text-secondary);
    margin: 0;
    font-size: 0;
}
</style>
<MudDialog>
    <DialogContent>              
        <div style="width: 400px;height:450px;overflow: auto;">
            <MudForm Model="@Technician" @ref=form @bind-IsValid="@success" @bind-Errors="@errors">   
                <MudItem Class="my-6">
                    <MudSelect T="CompanyDto" Label="Select Company" Required=true RequiredError=" " Value="@SelectedCompany" ValueChanged="(value) => HandleCompany(value)"
                               AnchorOrigin="Origin.BottomCenter">
                        @foreach (var company in Companies)
                        {
                            <MudSelectItem T="CompanyDto" Value="@company">@company.Name</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudTextField class="my-6" @bind-Value="Technician.FirstName" Label="First Name" Required=true RequiredError="" For="@(() => @Technician.FirstName)" Variant="Variant.Text"></MudTextField>  
                <MudTextField class="my-6" @bind-Value="Technician.LastName" Label="Last Name" Required=true RequiredError="" For="@(() => @Technician.LastName)" Variant="Variant.Text"></MudTextField>  
                <MudTextField class="my-6" @bind-Value="Technician.Email" Label="Email" Required=true RequiredError="" For="@(() => @Technician.Email)" Variant="Variant.Text"></MudTextField>  
                <MudTextField class="my-6" @bind-Value="Technician.Phone" Label="Phone" Required=true RequiredError="" For="@(() => @Technician.Phone)"  Variant="Variant.Text"></MudTextField>  
                <div class="d-flex">
                    <MudButton OnClick="Cancel">Cancel</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit" Class="ml-auto">Save</MudButton>
                    </div>
            </MudForm>
        </div>
    </DialogContent>
</MudDialog>


@code {
    [Parameter]
    public TechnicianDto? Technician {get; set;}
    [Parameter]
    public List<CompanyDto>? Companies { get; set; } = new();
    CompanyDto SelectedCompany = new();
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    bool success;
    string[] errors = { };
    MudForm form;
    protected override void OnParametersSet() 
    {
        if (Companies != null && Companies.Count > 0)
        {
            SelectedCompany = Companies.Where(x => x.Id == Technician.CompanyId).FirstOrDefault();
        }
    }
    public async Task HandleCompany(CompanyDto company)
    {
        Technician.CompanyId = company.Id;
        SelectedCompany = company;
    }

    void Submit() 
    {
        form.Validate();
        if (success && errors.Length == 0)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
    }
    void Cancel() => MudDialog.Cancel();
}